name: Release

on:
    release:
      types: [published]

    workflow_dispatch:
      
jobs:
    check-version:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: Set up Python
          uses: actions/setup-python@v5
          with:
            python-version: '3.x'

        - name: Install Library
          run: |
              python -m pip install .

        - id: get_version
          uses: battila7/get-version-action@v2

        - name: Check version
          run: |
            LIBRARY_VERSION=$(sunbeam --version)
            GITHUB_VERSION=${{ steps.get_version.outputs.version-without-v }}
            if [[ $LIBRARY_VERSION == $GITHUB_VERSION ]]; then
              echo "Versions match, continuing..."
            else
              echo "Versions don't match, exiting..."
              echo "Library version: $LIBRARY_VERSION"
              echo "GitHub version: $GITHUB_VERSION"
              exit 1
            fi

    run-tests:
      uses: ./.github/workflows/tests.yml
      secrets: inherit
      needs:
        - check-version

    run-integration-tests:
      uses: ./.github/workflows/integration-tests.yml
      secrets: inherit
      needs:
        - check-version
        - run-tests

    pypi-build:
      name: Build distribution 📦
      runs-on: ubuntu-latest
      needs: run-integration-tests

      steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Install pypa/build
        run: >-
          python3 -m
          pip install
          build
          --user
      - name: Build a binary wheel and a source tarball
        run: python3 -m build
      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

    publish-to-pypi:
      name: >-
        Publish Python 🐍 distribution 📦 to PyPI
      if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
      needs: pypi-build
      runs-on: ubuntu-latest
      environment:
        name: pypi
        url: https://pypi.org/p/sunbeamlib
      permissions:
        id-token: write  # IMPORTANT: mandatory for trusted publishing

      steps:
        - name: Download all the dists
          uses: actions/download-artifact@v4
          with:
            name: python-package-distributions
            path: dist/
        - name: Publish distribution 📦 to PyPI
          uses: pypa/gh-action-pypi-publish@release/v1

    push-dockerhub:
        uses: ./.github/workflows/dockerhub.yml
        secrets: inherit
        needs: run-integration-tests
